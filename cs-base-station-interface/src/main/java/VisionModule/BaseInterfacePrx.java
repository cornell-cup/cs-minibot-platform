// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `VisionModule.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VisionModule;

public interface BaseInterfacePrx extends Ice.ObjectPrx
{
    public double ping();

    public double ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping();

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ping(Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_ping(Callback_BaseInterface_ping __cb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx, Callback_BaseInterface_ping __cb);

    public Ice.AsyncResult begin_ping(IceInternal.Functional_DoubleCallback __responseCb,
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_ping(IceInternal.Functional_DoubleCallback __responseCb,
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx,
                                      IceInternal.Functional_DoubleCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_ping(java.util.Map<String, String> __ctx,
                                      IceInternal.Functional_DoubleCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public double end_ping(Ice.AsyncResult __result);

    public int update(Blob[] data);

    public int update(Blob[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_update(Blob[] data);

    public Ice.AsyncResult begin_update(Blob[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_update(Blob[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_update(Blob[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_update(Blob[] data, Callback_BaseInterface_update __cb);

    public Ice.AsyncResult begin_update(Blob[] data, java.util.Map<String, String> __ctx, Callback_BaseInterface_update __cb);

    public Ice.AsyncResult begin_update(Blob[] data,
                                        IceInternal.Functional_IntCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_update(Blob[] data,
                                        IceInternal.Functional_IntCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_update(Blob[] data,
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_IntCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_update(Blob[] data,
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_IntCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public int end_update(Ice.AsyncResult __result);
}
