// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `CommModule.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package CommModule;

/**
 * Provides type-specific helper functions.
 **/
public final class BaseInterfacePrxHelper extends Ice.ObjectPrxHelperBase implements BaseInterfacePrx
{
    private static final String __allOff_name = "allOff";

    public void allOff()
    {
        allOff(null, false);
    }

    public void allOff(java.util.Map<String, String> __ctx)
    {
        allOff(__ctx, true);
    }

    private void allOff(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_allOff(begin_allOff(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_allOff()
    {
        return begin_allOff(null, false, false, null);
    }

    public Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx)
    {
        return begin_allOff(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_allOff(Ice.Callback __cb)
    {
        return begin_allOff(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_allOff(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_allOff(Callback_BaseInterface_allOff __cb)
    {
        return begin_allOff(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx, Callback_BaseInterface_allOff __cb)
    {
        return begin_allOff(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_allOff(IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_allOff(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_allOff(IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_allOff(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_allOff(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_allOff(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_allOff(__ctx, 
                            __explicitCtx, 
                            __synchronous, 
                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_allOff(java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__allOff_name, __cb);
        try
        {
            __result.prepare(__allOff_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_allOff(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __allOff_name);
    }

    private static final String __init_name = "init";

    public void init(String ip, String name, int port, int id)
    {
        init(ip, name, port, id, null, false);
    }

    public void init(String ip, String name, int port, int id, java.util.Map<String, String> __ctx)
    {
        init(ip, name, port, id, __ctx, true);
    }

    private void init(String ip, String name, int port, int id, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_init(begin_init(ip, name, port, id, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id)
    {
        return begin_init(ip, name, port, id, null, false, false, null);
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id, java.util.Map<String, String> __ctx)
    {
        return begin_init(ip, name, port, id, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id, Ice.Callback __cb)
    {
        return begin_init(ip, name, port, id, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_init(ip, name, port, id, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id, Callback_BaseInterface_init __cb)
    {
        return begin_init(ip, name, port, id, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_init(String ip, String name, int port, int id, java.util.Map<String, String> __ctx, Callback_BaseInterface_init __cb)
    {
        return begin_init(ip, name, port, id, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_init(String ip,
                                      String name, 
                                      int port, 
                                      int id, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_init(ip, name, port, id, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_init(String ip,
                                      String name, 
                                      int port, 
                                      int id, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_init(ip, name, port, id, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_init(String ip,
                                      String name, 
                                      int port, 
                                      int id, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_init(ip, name, port, id, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_init(String ip,
                                      String name, 
                                      int port, 
                                      int id, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_init(ip, name, port, id, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_init(String ip, 
                                       String name, 
                                       int port, 
                                       int id, 
                                       java.util.Map<String, String> __ctx, 
                                       boolean __explicitCtx, 
                                       boolean __synchronous, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_init(ip, 
                          name, 
                          port, 
                          id, 
                          __ctx, 
                          __explicitCtx, 
                          __synchronous, 
                          new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_init(String ip, 
                                       String name, 
                                       int port, 
                                       int id, 
                                       java.util.Map<String, String> __ctx, 
                                       boolean __explicitCtx, 
                                       boolean __synchronous, 
                                       IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__init_name, __cb);
        try
        {
            __result.prepare(__init_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(ip);
            __os.writeString(name);
            __os.writeInt(port);
            __os.writeInt(id);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_init(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __init_name);
    }

    private static final String __laserTagFire_name = "laserTagFire";

    public void laserTagFire()
    {
        laserTagFire(null, false);
    }

    public void laserTagFire(java.util.Map<String, String> __ctx)
    {
        laserTagFire(__ctx, true);
    }

    private void laserTagFire(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_laserTagFire(begin_laserTagFire(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_laserTagFire()
    {
        return begin_laserTagFire(null, false, false, null);
    }

    public Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx)
    {
        return begin_laserTagFire(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_laserTagFire(Ice.Callback __cb)
    {
        return begin_laserTagFire(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_laserTagFire(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagFire(Callback_BaseInterface_laserTagFire __cb)
    {
        return begin_laserTagFire(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx, Callback_BaseInterface_laserTagFire __cb)
    {
        return begin_laserTagFire(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagFire(IceInternal.Functional_VoidCallback __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_laserTagFire(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_laserTagFire(IceInternal.Functional_VoidCallback __responseCb,
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagFire(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx,
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_laserTagFire(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx,
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagFire(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagFire(__ctx, 
                                  __explicitCtx, 
                                  __synchronous, 
                                  new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_laserTagFire(java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__laserTagFire_name, __cb);
        try
        {
            __result.prepare(__laserTagFire_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_laserTagFire(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __laserTagFire_name);
    }

    private static final String __laserTagShield_name = "laserTagShield";

    public void laserTagShield()
    {
        laserTagShield(null, false);
    }

    public void laserTagShield(java.util.Map<String, String> __ctx)
    {
        laserTagShield(__ctx, true);
    }

    private void laserTagShield(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_laserTagShield(begin_laserTagShield(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_laserTagShield()
    {
        return begin_laserTagShield(null, false, false, null);
    }

    public Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx)
    {
        return begin_laserTagShield(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_laserTagShield(Ice.Callback __cb)
    {
        return begin_laserTagShield(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_laserTagShield(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagShield(Callback_BaseInterface_laserTagShield __cb)
    {
        return begin_laserTagShield(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx, Callback_BaseInterface_laserTagShield __cb)
    {
        return begin_laserTagShield(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_laserTagShield(IceInternal.Functional_VoidCallback __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_laserTagShield(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_laserTagShield(IceInternal.Functional_VoidCallback __responseCb,
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagShield(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx,
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_laserTagShield(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx,
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagShield(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_laserTagShield(__ctx, 
                                    __explicitCtx, 
                                    __synchronous, 
                                    new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_laserTagShield(java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__laserTagShield_name, __cb);
        try
        {
            __result.prepare(__laserTagShield_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_laserTagShield(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __laserTagShield_name);
    }

    private static final String __moveArm_name = "moveArm";

    public void moveArm(String pos)
    {
        moveArm(pos, null, false);
    }

    public void moveArm(String pos, java.util.Map<String, String> __ctx)
    {
        moveArm(pos, __ctx, true);
    }

    private void moveArm(String pos, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_moveArm(begin_moveArm(pos, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_moveArm(String pos)
    {
        return begin_moveArm(pos, null, false, false, null);
    }

    public Ice.AsyncResult begin_moveArm(String pos, java.util.Map<String, String> __ctx)
    {
        return begin_moveArm(pos, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_moveArm(String pos, Ice.Callback __cb)
    {
        return begin_moveArm(pos, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_moveArm(String pos, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_moveArm(pos, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_moveArm(String pos, Callback_BaseInterface_moveArm __cb)
    {
        return begin_moveArm(pos, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_moveArm(String pos, java.util.Map<String, String> __ctx, Callback_BaseInterface_moveArm __cb)
    {
        return begin_moveArm(pos, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_moveArm(String pos,
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_moveArm(pos, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_moveArm(String pos,
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_moveArm(pos, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_moveArm(String pos,
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_moveArm(pos, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_moveArm(String pos,
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_moveArm(pos, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_moveArm(String pos, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_moveArm(pos, 
                             __ctx, 
                             __explicitCtx, 
                             __synchronous, 
                             new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_moveArm(String pos, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__moveArm_name, __cb);
        try
        {
            __result.prepare(__moveArm_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(pos);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_moveArm(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __moveArm_name);
    }

    private static final String __pokeBot_name = "pokeBot";

    public void pokeBot(String baseIP)
    {
        pokeBot(baseIP, null, false);
    }

    public void pokeBot(String baseIP, java.util.Map<String, String> __ctx)
    {
        pokeBot(baseIP, __ctx, true);
    }

    private void pokeBot(String baseIP, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_pokeBot(begin_pokeBot(baseIP, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP)
    {
        return begin_pokeBot(baseIP, null, false, false, null);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP, java.util.Map<String, String> __ctx)
    {
        return begin_pokeBot(baseIP, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP, Ice.Callback __cb)
    {
        return begin_pokeBot(baseIP, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_pokeBot(baseIP, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP, Callback_BaseInterface_pokeBot __cb)
    {
        return begin_pokeBot(baseIP, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP, java.util.Map<String, String> __ctx, Callback_BaseInterface_pokeBot __cb)
    {
        return begin_pokeBot(baseIP, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP,
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pokeBot(baseIP, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP,
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pokeBot(baseIP, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP,
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pokeBot(baseIP, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pokeBot(String baseIP,
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pokeBot(baseIP, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_pokeBot(String baseIP, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pokeBot(baseIP, 
                             __ctx, 
                             __explicitCtx, 
                             __synchronous, 
                             new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_pokeBot(String baseIP, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__pokeBot_name, __cb);
        try
        {
            __result.prepare(__pokeBot_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(baseIP);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_pokeBot(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __pokeBot_name);
    }

    private static final String __reload_name = "reload";

    public void reload()
    {
        reload(null, false);
    }

    public void reload(java.util.Map<String, String> __ctx)
    {
        reload(__ctx, true);
    }

    private void reload(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_reload(begin_reload(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_reload()
    {
        return begin_reload(null, false, false, null);
    }

    public Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx)
    {
        return begin_reload(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_reload(Ice.Callback __cb)
    {
        return begin_reload(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_reload(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_reload(Callback_BaseInterface_reload __cb)
    {
        return begin_reload(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx, Callback_BaseInterface_reload __cb)
    {
        return begin_reload(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_reload(IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_reload(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_reload(IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_reload(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_reload(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_reload(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_reload(__ctx, 
                            __explicitCtx, 
                            __synchronous, 
                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_reload(java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__reload_name, __cb);
        try
        {
            __result.prepare(__reload_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_reload(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __reload_name);
    }

    private static final String __requestImageProcessing_name = "requestImageProcessing";

    public void requestImageProcessing()
    {
        requestImageProcessing(null, false);
    }

    public void requestImageProcessing(java.util.Map<String, String> __ctx)
    {
        requestImageProcessing(__ctx, true);
    }

    private void requestImageProcessing(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_requestImageProcessing(begin_requestImageProcessing(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_requestImageProcessing()
    {
        return begin_requestImageProcessing(null, false, false, null);
    }

    public Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx)
    {
        return begin_requestImageProcessing(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_requestImageProcessing(Ice.Callback __cb)
    {
        return begin_requestImageProcessing(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_requestImageProcessing(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_requestImageProcessing(Callback_BaseInterface_requestImageProcessing __cb)
    {
        return begin_requestImageProcessing(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx, Callback_BaseInterface_requestImageProcessing __cb)
    {
        return begin_requestImageProcessing(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_requestImageProcessing(IceInternal.Functional_VoidCallback __responseCb,
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_requestImageProcessing(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_requestImageProcessing(IceInternal.Functional_VoidCallback __responseCb,
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_requestImageProcessing(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx,
                                                        IceInternal.Functional_VoidCallback __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_requestImageProcessing(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx,
                                                        IceInternal.Functional_VoidCallback __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_requestImageProcessing(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.Functional_VoidCallback __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_requestImageProcessing(__ctx, 
                                            __explicitCtx, 
                                            __synchronous, 
                                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_requestImageProcessing(java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__requestImageProcessing_name, __cb);
        try
        {
            __result.prepare(__requestImageProcessing_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_requestImageProcessing(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __requestImageProcessing_name);
    }

    private static final String __restartBot_name = "restartBot";

    public void restartBot()
    {
        restartBot(null, false);
    }

    public void restartBot(java.util.Map<String, String> __ctx)
    {
        restartBot(__ctx, true);
    }

    private void restartBot(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_restartBot(begin_restartBot(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_restartBot()
    {
        return begin_restartBot(null, false, false, null);
    }

    public Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx)
    {
        return begin_restartBot(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_restartBot(Ice.Callback __cb)
    {
        return begin_restartBot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_restartBot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_restartBot(Callback_BaseInterface_restartBot __cb)
    {
        return begin_restartBot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx, Callback_BaseInterface_restartBot __cb)
    {
        return begin_restartBot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_restartBot(IceInternal.Functional_VoidCallback __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_restartBot(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_restartBot(IceInternal.Functional_VoidCallback __responseCb,
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_restartBot(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_restartBot(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx,
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_restartBot(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_restartBot(__ctx, 
                                __explicitCtx, 
                                __synchronous, 
                                new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_restartBot(java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__restartBot_name, __cb);
        try
        {
            __result.prepare(__restartBot_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_restartBot(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __restartBot_name);
    }

    private static final String __sendControlInfo_name = "sendControlInfo";

    public void sendControlInfo(int port, int on)
    {
        sendControlInfo(port, on, null, false);
    }

    public void sendControlInfo(int port, int on, java.util.Map<String, String> __ctx)
    {
        sendControlInfo(port, on, __ctx, true);
    }

    private void sendControlInfo(int port, int on, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_sendControlInfo(begin_sendControlInfo(port, on, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on)
    {
        return begin_sendControlInfo(port, on, null, false, false, null);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on, java.util.Map<String, String> __ctx)
    {
        return begin_sendControlInfo(port, on, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on, Ice.Callback __cb)
    {
        return begin_sendControlInfo(port, on, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_sendControlInfo(port, on, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on, Callback_BaseInterface_sendControlInfo __cb)
    {
        return begin_sendControlInfo(port, on, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port, int on, java.util.Map<String, String> __ctx, Callback_BaseInterface_sendControlInfo __cb)
    {
        return begin_sendControlInfo(port, on, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port,
                                                 int on, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendControlInfo(port, on, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port,
                                                 int on, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendControlInfo(port, on, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port,
                                                 int on, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendControlInfo(port, on, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendControlInfo(int port,
                                                 int on, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendControlInfo(port, on, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_sendControlInfo(int port, 
                                                  int on, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendControlInfo(port, 
                                     on, 
                                     __ctx, 
                                     __explicitCtx, 
                                     __synchronous, 
                                     new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_sendControlInfo(int port, 
                                                  int on, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__sendControlInfo_name, __cb);
        try
        {
            __result.prepare(__sendControlInfo_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(port);
            __os.writeInt(on);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_sendControlInfo(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __sendControlInfo_name);
    }

    private static final String __sendMovementData_name = "sendMovementData";

    public void sendMovementData(int forward, int strafe, int rotate)
    {
        sendMovementData(forward, strafe, rotate, null, false);
    }

    public void sendMovementData(int forward, int strafe, int rotate, java.util.Map<String, String> __ctx)
    {
        sendMovementData(forward, strafe, rotate, __ctx, true);
    }

    private void sendMovementData(int forward, int strafe, int rotate, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_sendMovementData(begin_sendMovementData(forward, strafe, rotate, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate)
    {
        return begin_sendMovementData(forward, strafe, rotate, null, false, false, null);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate, java.util.Map<String, String> __ctx)
    {
        return begin_sendMovementData(forward, strafe, rotate, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate, Ice.Callback __cb)
    {
        return begin_sendMovementData(forward, strafe, rotate, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_sendMovementData(forward, strafe, rotate, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate, Callback_BaseInterface_sendMovementData __cb)
    {
        return begin_sendMovementData(forward, strafe, rotate, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward, int strafe, int rotate, java.util.Map<String, String> __ctx, Callback_BaseInterface_sendMovementData __cb)
    {
        return begin_sendMovementData(forward, strafe, rotate, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward,
                                                  int strafe, 
                                                  int rotate, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendMovementData(forward, strafe, rotate, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward,
                                                  int strafe, 
                                                  int rotate, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendMovementData(forward, strafe, rotate, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward,
                                                  int strafe, 
                                                  int rotate, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendMovementData(forward, strafe, rotate, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendMovementData(int forward,
                                                  int strafe, 
                                                  int rotate, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendMovementData(forward, strafe, rotate, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_sendMovementData(int forward, 
                                                   int strafe, 
                                                   int rotate, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendMovementData(forward, 
                                      strafe, 
                                      rotate, 
                                      __ctx, 
                                      __explicitCtx, 
                                      __synchronous, 
                                      new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_sendMovementData(int forward, 
                                                   int strafe, 
                                                   int rotate, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__sendMovementData_name, __cb);
        try
        {
            __result.prepare(__sendMovementData_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(forward);
            __os.writeInt(strafe);
            __os.writeInt(rotate);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_sendMovementData(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __sendMovementData_name);
    }

    private static final String __sendSteeringData_name = "sendSteeringData";

    public void sendSteeringData(int direction)
    {
        sendSteeringData(direction, null, false);
    }

    public void sendSteeringData(int direction, java.util.Map<String, String> __ctx)
    {
        sendSteeringData(direction, __ctx, true);
    }

    private void sendSteeringData(int direction, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_sendSteeringData(begin_sendSteeringData(direction, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction)
    {
        return begin_sendSteeringData(direction, null, false, false, null);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction, java.util.Map<String, String> __ctx)
    {
        return begin_sendSteeringData(direction, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction, Ice.Callback __cb)
    {
        return begin_sendSteeringData(direction, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_sendSteeringData(direction, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction, Callback_BaseInterface_sendSteeringData __cb)
    {
        return begin_sendSteeringData(direction, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction, java.util.Map<String, String> __ctx, Callback_BaseInterface_sendSteeringData __cb)
    {
        return begin_sendSteeringData(direction, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction,
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendSteeringData(direction, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction,
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendSteeringData(direction, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction,
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendSteeringData(direction, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendSteeringData(int direction,
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendSteeringData(direction, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_sendSteeringData(int direction, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendSteeringData(direction, 
                                      __ctx, 
                                      __explicitCtx, 
                                      __synchronous, 
                                      new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_sendSteeringData(int direction, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__sendSteeringData_name, __cb);
        try
        {
            __result.prepare(__sendSteeringData_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(direction);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_sendSteeringData(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __sendSteeringData_name);
    }

    private static final String __sendTurretData_name = "sendTurretData";

    public void sendTurretData(int horizontal, int vertical)
    {
        sendTurretData(horizontal, vertical, null, false);
    }

    public void sendTurretData(int horizontal, int vertical, java.util.Map<String, String> __ctx)
    {
        sendTurretData(horizontal, vertical, __ctx, true);
    }

    private void sendTurretData(int horizontal, int vertical, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_sendTurretData(begin_sendTurretData(horizontal, vertical, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical)
    {
        return begin_sendTurretData(horizontal, vertical, null, false, false, null);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical, java.util.Map<String, String> __ctx)
    {
        return begin_sendTurretData(horizontal, vertical, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical, Ice.Callback __cb)
    {
        return begin_sendTurretData(horizontal, vertical, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_sendTurretData(horizontal, vertical, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical, Callback_BaseInterface_sendTurretData __cb)
    {
        return begin_sendTurretData(horizontal, vertical, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal, int vertical, java.util.Map<String, String> __ctx, Callback_BaseInterface_sendTurretData __cb)
    {
        return begin_sendTurretData(horizontal, vertical, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal,
                                                int vertical, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendTurretData(horizontal, vertical, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal,
                                                int vertical, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendTurretData(horizontal, vertical, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal,
                                                int vertical, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sendTurretData(horizontal, vertical, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sendTurretData(int horizontal,
                                                int vertical, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendTurretData(horizontal, vertical, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_sendTurretData(int horizontal, 
                                                 int vertical, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sendTurretData(horizontal, 
                                    vertical, 
                                    __ctx, 
                                    __explicitCtx, 
                                    __synchronous, 
                                    new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_sendTurretData(int horizontal, 
                                                 int vertical, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__sendTurretData_name, __cb);
        try
        {
            __result.prepare(__sendTurretData_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(horizontal);
            __os.writeInt(vertical);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_sendTurretData(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __sendTurretData_name);
    }

    private static final String __setDuneBotMotorSpeeds_name = "setDuneBotMotorSpeeds";

    public void setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft)
    {
        setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false);
    }

    public void setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, java.util.Map<String, String> __ctx)
    {
        setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true);
    }

    private void setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_setDuneBotMotorSpeeds(begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false, false, null);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, java.util.Map<String, String> __ctx)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, Ice.Callback __cb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, Callback_BaseInterface_setDuneBotMotorSpeeds __cb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, int frontRight, int backRight, int backLeft, java.util.Map<String, String> __ctx, Callback_BaseInterface_setDuneBotMotorSpeeds __cb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft,
                                                       int frontRight, 
                                                       int backRight, 
                                                       int backLeft, 
                                                       IceInternal.Functional_VoidCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft,
                                                       int frontRight, 
                                                       int backRight, 
                                                       int backLeft, 
                                                       IceInternal.Functional_VoidCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft,
                                                       int frontRight, 
                                                       int backRight, 
                                                       int backLeft, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_VoidCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft,
                                                       int frontRight, 
                                                       int backRight, 
                                                       int backLeft, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_VoidCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, frontRight, backRight, backLeft, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, 
                                                        int frontRight, 
                                                        int backRight, 
                                                        int backLeft, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.Functional_VoidCallback __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setDuneBotMotorSpeeds(frontLeft, 
                                           frontRight, 
                                           backRight, 
                                           backLeft, 
                                           __ctx, 
                                           __explicitCtx, 
                                           __synchronous, 
                                           new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_setDuneBotMotorSpeeds(int frontLeft, 
                                                        int frontRight, 
                                                        int backRight, 
                                                        int backLeft, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__setDuneBotMotorSpeeds_name, __cb);
        try
        {
            __result.prepare(__setDuneBotMotorSpeeds_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(frontLeft);
            __os.writeInt(frontRight);
            __os.writeInt(backRight);
            __os.writeInt(backLeft);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_setDuneBotMotorSpeeds(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __setDuneBotMotorSpeeds_name);
    }

    private static final String __setMotorSpeeds_name = "setMotorSpeeds";

    public void setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight)
    {
        setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false);
    }

    public void setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, java.util.Map<String, String> __ctx)
    {
        setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true);
    }

    private void setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_setMotorSpeeds(begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false, false, null);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, java.util.Map<String, String> __ctx)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, Ice.Callback __cb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, Callback_BaseInterface_setMotorSpeeds __cb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, int frontRight, int backLeft, int backRight, java.util.Map<String, String> __ctx, Callback_BaseInterface_setMotorSpeeds __cb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft,
                                                int frontRight, 
                                                int backLeft, 
                                                int backRight, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft,
                                                int frontRight, 
                                                int backLeft, 
                                                int backRight, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft,
                                                int frontRight, 
                                                int backLeft, 
                                                int backRight, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setMotorSpeeds(int frontLeft,
                                                int frontRight, 
                                                int backLeft, 
                                                int backRight, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMotorSpeeds(frontLeft, frontRight, backLeft, backRight, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, 
                                                 int frontRight, 
                                                 int backLeft, 
                                                 int backRight, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMotorSpeeds(frontLeft, 
                                    frontRight, 
                                    backLeft, 
                                    backRight, 
                                    __ctx, 
                                    __explicitCtx, 
                                    __synchronous, 
                                    new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_setMotorSpeeds(int frontLeft, 
                                                 int frontRight, 
                                                 int backLeft, 
                                                 int backRight, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__setMotorSpeeds_name, __cb);
        try
        {
            __result.prepare(__setMotorSpeeds_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(frontLeft);
            __os.writeInt(frontRight);
            __os.writeInt(backLeft);
            __os.writeInt(backRight);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_setMotorSpeeds(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __setMotorSpeeds_name);
    }

    private static final String __shoot_name = "shoot";

    public void shoot()
    {
        shoot(null, false);
    }

    public void shoot(java.util.Map<String, String> __ctx)
    {
        shoot(__ctx, true);
    }

    private void shoot(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_shoot(begin_shoot(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_shoot()
    {
        return begin_shoot(null, false, false, null);
    }

    public Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx)
    {
        return begin_shoot(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_shoot(Ice.Callback __cb)
    {
        return begin_shoot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_shoot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_shoot(Callback_BaseInterface_shoot __cb)
    {
        return begin_shoot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx, Callback_BaseInterface_shoot __cb)
    {
        return begin_shoot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_shoot(IceInternal.Functional_VoidCallback __responseCb,
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_shoot(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_shoot(IceInternal.Functional_VoidCallback __responseCb,
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shoot(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx,
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_shoot(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx,
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shoot(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx, 
                                        boolean __explicitCtx, 
                                        boolean __synchronous, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shoot(__ctx, 
                           __explicitCtx, 
                           __synchronous, 
                           new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_shoot(java.util.Map<String, String> __ctx, 
                                        boolean __explicitCtx, 
                                        boolean __synchronous, 
                                        IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__shoot_name, __cb);
        try
        {
            __result.prepare(__shoot_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_shoot(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __shoot_name);
    }

    private static final String __shutdownBot_name = "shutdownBot";

    public void shutdownBot()
    {
        shutdownBot(null, false);
    }

    public void shutdownBot(java.util.Map<String, String> __ctx)
    {
        shutdownBot(__ctx, true);
    }

    private void shutdownBot(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_shutdownBot(begin_shutdownBot(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_shutdownBot()
    {
        return begin_shutdownBot(null, false, false, null);
    }

    public Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx)
    {
        return begin_shutdownBot(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_shutdownBot(Ice.Callback __cb)
    {
        return begin_shutdownBot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_shutdownBot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_shutdownBot(Callback_BaseInterface_shutdownBot __cb)
    {
        return begin_shutdownBot(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx, Callback_BaseInterface_shutdownBot __cb)
    {
        return begin_shutdownBot(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_shutdownBot(IceInternal.Functional_VoidCallback __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_shutdownBot(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_shutdownBot(IceInternal.Functional_VoidCallback __responseCb,
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shutdownBot(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_shutdownBot(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx,
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shutdownBot(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_shutdownBot(__ctx, 
                                 __explicitCtx, 
                                 __synchronous, 
                                 new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_shutdownBot(java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__shutdownBot_name, __cb);
        try
        {
            __result.prepare(__shutdownBot_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_shutdownBot(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __shutdownBot_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static BaseInterfacePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context simulator.map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static BaseInterfacePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static BaseInterfacePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context simulator.map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static BaseInterfacePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static BaseInterfacePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static BaseInterfacePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, BaseInterfacePrx.class, BaseInterfacePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::CommModule::BaseInterface",
        "::Ice::Object"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[0];
    }

    public static void __write(IceInternal.BasicStream __os, BaseInterfacePrx v)
    {
        __os.writeProxy(v);
    }

    public static BaseInterfacePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            BaseInterfacePrxHelper result = new BaseInterfacePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
